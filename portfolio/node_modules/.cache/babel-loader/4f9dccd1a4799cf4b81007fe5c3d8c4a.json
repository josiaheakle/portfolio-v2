{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/josiah-eakle/Dev/React-Apps/portfolio-v2/portfolio/src/components/anim/AnimOnView.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useInView } from \"react-intersection-observer\";\nimport { motion, useAnimation } from \"framer-motion\";\n\nconst AnimOnView = ({\n  children\n}) => {\n  _s();\n\n  const controls = useAnimation();\n  const [ref, inView] = useInView();\n  useEffect(() => {\n    if (inView) {\n      controls.start(\"visible\");\n    }\n  }, [controls, inView]);\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    ref: ref,\n    animate: controls,\n    initial: \"hidden\",\n    transition: {\n      duration: 0.3\n    },\n    variants: {\n      visible: {\n        opacity: 1,\n        scale: 1\n      },\n      hidden: {\n        opacity: 0,\n        scale: 0\n      }\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AnimOnView, \"2NEUvrxzw09dl1eC0Q0pbm0pOIE=\", false, function () {\n  return [useAnimation, useInView];\n});\n\n_c = AnimOnView;\nexport default AnimOnView;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnimOnView\");","map":{"version":3,"sources":["/home/josiah-eakle/Dev/React-Apps/portfolio-v2/portfolio/src/components/anim/AnimOnView.js"],"names":["useEffect","useInView","motion","useAnimation","AnimOnView","children","controls","ref","inView","start","duration","visible","opacity","scale","hidden"],"mappings":";;;;;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,SAAT,QAA0B,6BAA1B;AACA,SAASC,MAAT,EAAiBC,YAAjB,QAAqC,eAArC;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACjC,QAAMC,QAAQ,GAAGH,YAAY,EAA7B;AACA,QAAM,CAACI,GAAD,EAAMC,MAAN,IAAgBP,SAAS,EAA/B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIQ,MAAJ,EAAY;AACRF,MAAAA,QAAQ,CAACG,KAAT,CAAe,SAAf;AACH;AACJ,GAJQ,EAIN,CAACH,QAAD,EAAWE,MAAX,CAJM,CAAT;AAMA,sBACI,QAAC,MAAD,CAAQ,GAAR;AAAY,IAAA,GAAG,EAAED,GAAjB;AAAsB,IAAA,OAAO,EAAED,QAA/B;AAAyC,IAAA,OAAO,EAAC,QAAjD;AAA0D,IAAA,UAAU,EAAE;AAAEI,MAAAA,QAAQ,EAAE;AAAZ,KAAtE;AAAyF,IAAA,QAAQ,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,OAAO,EAAE,CAAX;AAAcC,QAAAA,KAAK,EAAE;AAArB,OAAX;AAAqCC,MAAAA,MAAM,EAAE;AAAEF,QAAAA,OAAO,EAAE,CAAX;AAAcC,QAAAA,KAAK,EAAE;AAArB;AAA7C,KAAnG;AAAA,cACKR;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAfD;;GAAMD,U;UACeD,Y,EACKF,S;;;KAFpBG,U;AAiBN,eAAeA,UAAf","sourcesContent":["\nimport { useEffect } from \"react\"\nimport { useInView } from \"react-intersection-observer\"\nimport { motion, useAnimation } from \"framer-motion\"\n\nconst AnimOnView = ({ children }) => {\n    const controls = useAnimation();\n    const [ref, inView] = useInView();\n\n    useEffect(() => {\n        if (inView) {\n            controls.start(\"visible\");\n        }\n    }, [controls, inView]);\n\n    return (\n        <motion.div ref={ref} animate={controls} initial=\"hidden\" transition={{ duration: 0.3 }} variants={{ visible: { opacity: 1, scale: 1 }, hidden: { opacity: 0, scale: 0 } }}>\n            {children}\n        </motion.div>\n    );\n}\n\nexport default AnimOnView;"]},"metadata":{},"sourceType":"module"}