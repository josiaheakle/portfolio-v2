{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/josiah-eakle/Dev/React-Apps/portfolio-v2/portfolio/src/components/Contact.js\",\n    _s = $RefreshSig$();\n\nimport AnimOnView from \"./anim/AnimOnView\";\nimport { useState } from \"react\";\n\nrequire('dotenv').config();\n\nconst Contact = () => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState('');\n\n  const submitForm = async () => {\n    const res = await fetch(process.env.REACT_APP_MY_API, {\n      method: 'POST',\n      // *GET, POST, PUT, DELETE, etc.\n      mode: 'cors',\n      // no-cors, *cors, same-origin\n      cache: 'no-cache',\n      // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: 'same-origin',\n      // include, *same-origin, omit\n      headers: {\n        'Content-Type': 'application/json' // 'Content-Type': 'application/x-www-form-urlencoded',\n\n      },\n      redirect: 'follow',\n      // manual, *follow, error\n      referrerPolicy: 'no-referrer',\n      // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n      body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Contact full-screen align-center\",\n    children: /*#__PURE__*/_jsxDEV(AnimOnView, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Contact Me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"contact-form\",\n        onSubmit: e => {\n          e.preventDefault();\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"horizontal small-gap align-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"vertical\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => {\n                setName(e.target.value);\n              },\n              className: \"contact-input contact align-center\",\n              type: \"text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"vertical\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => {\n                setEmail(e.target.value);\n              },\n              className: \"contact-input contact align-center\",\n              type: \"email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"contact-textarea-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"How Can I Help?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            onChange: e => {\n              setMessage(e.target.value);\n            },\n            className: \"contact-textarea contact align-center\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"contact contact-button\",\n          type: \"submit\",\n          children: \" Submit \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Contact, \"j1j+wUspr8ocNPTNQ1matQLgW3k=\");\n\n_c = Contact;\nexport default Contact;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"sources":["/home/josiah-eakle/Dev/React-Apps/portfolio-v2/portfolio/src/components/Contact.js"],"names":["AnimOnView","useState","require","config","Contact","name","setName","email","setEmail","message","setMessage","submitForm","res","fetch","process","env","REACT_APP_MY_API","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","data","e","preventDefault","target","value"],"mappings":";;;;;AACA,OAAOA,UAAP,MAAuB,mBAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AACAC,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAElB,QAAM,CAAEC,IAAF,EAAQC,OAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAEM,KAAF,EAASC,QAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAAEQ,OAAF,EAAWC,UAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;;AAIA,QAAMU,UAAU,GAAG,YAAY;AAE3B,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAACC,OAAO,CAACC,GAAR,CAAYC,gBAAb,EAA+B;AAClDC,MAAAA,MAAM,EAAE,MAD0C;AAClC;AAChBC,MAAAA,IAAI,EAAE,MAF4C;AAEpC;AACdC,MAAAA,KAAK,EAAE,UAH2C;AAG/B;AACnBC,MAAAA,WAAW,EAAE,aAJqC;AAItB;AAC5BC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT,CAEP;;AAFO,OALyC;AASlDC,MAAAA,QAAQ,EAAE,QATwC;AAS9B;AACpBC,MAAAA,cAAc,EAAE,aAVkC;AAUnB;AAC/BC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeC,IAAf,CAX4C,CAWvB;;AAXuB,KAA/B,CAAvB;AAcH,GAhBD;;AAkBA,sBACI;AAAK,IAAA,SAAS,EAAC,kCAAf;AAAA,2BACI,QAAC,UAAD;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,SAAS,EAAC,cAAhB;AAA+B,QAAA,QAAQ,EAAGC,CAAD,IAAO;AAACA,UAAAA,CAAC,CAACC,cAAF;AAAoB,SAArE;AAAA,gCACI;AAAM,UAAA,SAAS,EAAC,mCAAhB;AAAA,kCACI;AAAM,YAAA,SAAS,EAAC,UAAhB;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAO,cAAA,QAAQ,EAAGD,CAAD,IAAO;AAACtB,gBAAAA,OAAO,CAACsB,CAAC,CAACE,MAAF,CAASC,KAAV,CAAP;AAAwB,eAAjD;AAAmD,cAAA,SAAS,EAAC,oCAA7D;AAAkG,cAAA,IAAI,EAAC;AAAvG;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAKI;AAAM,YAAA,SAAS,EAAC,UAAhB;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAO,cAAA,QAAQ,EAAGH,CAAD,IAAO;AAACpB,gBAAAA,QAAQ,CAACoB,CAAC,CAACE,MAAF,CAASC,KAAV,CAAR;AAAyB,eAAlD;AAAoD,cAAA,SAAS,EAAC,oCAA9D;AAAmG,cAAA,IAAI,EAAC;AAAxG;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAWI;AAAM,UAAA,SAAS,EAAC,4BAAhB;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAU,YAAA,QAAQ,EAAGH,CAAD,IAAO;AAAClB,cAAAA,UAAU,CAACkB,CAAC,CAACE,MAAF,CAASC,KAAV,CAAV;AAA2B,aAAvD;AAAyD,YAAA,SAAS,EAAC;AAAnE;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXJ,eAeI;AAAQ,UAAA,SAAS,EAAC,wBAAlB;AAA2C,UAAA,IAAI,EAAC,QAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH,CAlDD;;GAAM3B,O;;KAAAA,O;AAoDN,eAAeA,OAAf","sourcesContent":["\nimport AnimOnView from \"./anim/AnimOnView\";\nimport { useState } from \"react\"\nrequire('dotenv').config();\n\nconst Contact = () => {\n\n    const [ name, setName ] = useState('');\n    const [ email, setEmail ] = useState('');\n    const [ message, setMessage ] = useState('');\n\n\n\n    const submitForm = async () => {\n        \n        const res = await fetch(process.env.REACT_APP_MY_API, {\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\n            mode: 'cors', // no-cors, *cors, same-origin\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n            credentials: 'same-origin', // include, *same-origin, omit\n            headers: {\n              'Content-Type': 'application/json'\n              // 'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            redirect: 'follow', // manual, *follow, error\n            referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n            body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n          });\n\n    }\n\n    return(\n        <div className='Contact full-screen align-center'>\n            <AnimOnView>\n                <h2>Contact Me</h2>\n                <form className='contact-form' onSubmit={(e) => {e.preventDefault();}}>\n                    <span className='horizontal small-gap align-center'> \n                        <span className='vertical'>\n                            <label >Name</label>\n                            <input onChange={(e) => {setName(e.target.value)}} className='contact-input contact align-center' type='text' />\n                        </span>\n                        <span className='vertical'>\n                            <label>Email</label>\n                            <input onChange={(e) => {setEmail(e.target.value)}} className='contact-input contact align-center' type='email' ></input>\n                        </span>\n                    </span>\n                    <span className='contact-textarea-container'>\n                        <label>How Can I Help?</label>\n                        <textarea onChange={(e) => {setMessage(e.target.value)}} className='contact-textarea contact align-center' ></textarea>\n                    </span>\n                    <button className='contact contact-button' type='submit'> Submit </button>\n                </form>\n            </AnimOnView>\n        </div>\n    );\n}\n\nexport default Contact;"]},"metadata":{},"sourceType":"module"}